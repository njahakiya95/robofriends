{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAACC,GACb,OACC,sBAAKC,UAAY,kDAAjB,UACC,qBAAMC,IAAM,SAASC,IAAG,+BAA4BH,EAAMI,GAAlC,cACxB,gCACC,mCAAMJ,EAAMK,KAAZ,OACA,kCAAKL,EAAMM,MAAX,cCMWC,EAXE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACZC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACvC,OAAO,cAAC,EAAD,CAAeR,GAAMI,EAAOI,GAAGR,GAAIC,KAAQG,EAAOI,GAAGP,KAAMC,MAASE,EAAOI,GAAGN,OAAlEM,MAEpB,OACC,gCACEH,EADF,QCOaI,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aACjC,OACC,qBAAKd,UAAY,MAAjB,SACC,uBACCA,UAAY,mCACZe,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCCDI,G,MARA,SAACnB,GACf,OACC,qBAAKoB,MAAS,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACEvB,EAAMwB,aCoCKC,E,kDAlCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAb1C,EAAKC,MAAQ,CACZvB,OAAQ,GACRM,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBkB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACpB,OAAQ4B,S,oBAOxC,WAAU,IAAD,OACFC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GAC/C,OAAOA,EAAOH,KAAKmC,cAAcC,SAAS,EAAKV,MAAMjB,YAAY0B,kBAElE,OACC,sBAAKvC,UAAY,KAAjB,UACC,oBAAIA,UAAW,KAAf,yBACA,cAAC,EAAD,CAAWc,aAAgBuB,KAAKZ,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUlB,OAAU6B,a,GA5BPK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAIjDX,M","file":"static/js/main.eb282c12.chunk.js","sourcesContent":["import React from 'react' \n\nconst Card = (props) => {\n\treturn (\n\t\t<div className = 'bg-light-green dib br3 pa3 ma2 grow bw2 shadow5'>\n\t\t\t<img  alt = 'robots' src = {`https://robohash.org/${props.id}?200*200`}/>\n\t\t\t<div>\n\t\t\t\t<h2> {props.name} </h2>\n\t\t\t\t<p> {props.email} </p>\n\t\t\t</div>\n\t\t</div>\n\t); \n}\n\nexport default Card; ","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\tconst cardComponent = robots.map((user, i) => {\n\t\treturn <Card key ={i} id = {robots[i].id} name = {robots[i].name} email = {robots[i].email}/>\n\t})\n\treturn (\n\t\t<div>\n\t\t\t{cardComponent};\n    \t</div>\n\t); \n}\n\nexport default CardList; ","import React from 'react'; \n\nconst SearchBox = ( {searchfield, searchChange}) => {\n\treturn (\n\t\t<div className = 'pa2'>\t\n\t\t\t<input \n\t\t\t\tclassName = 'pa3 ba b--green bg-lightest-blue'\n\t\t\t\ttype = 'search' \n\t\t\t\tplaceholder = 'search robots' \n\t\t\t\tonChange = {searchChange}\n\t\t\t/>\n\t\t</div>\n\t); \n}\n\nexport default SearchBox; ","import React from 'react'; \n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style = {{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n\t\t\t{props.children}\n\t\t</div> \n\t);\n};\n\nexport default Scroll; ","import React, { Component } from 'react';\nimport CardList from '../components/CardList'; \nimport SearchBox from '../components/SearchBox'; \nimport './App.css';\nimport Scroll from '../components/Scroll'; \n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\t\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({robots: users}));\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value })\n\t}\n\n\trender() {\n\t\tconst filteredRobots = this.state.robots.filter(robots => {\n\t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase()); \n\t\t})\n\t\treturn (\n\t\t\t<div className = 'tc'>\n\t\t\t\t<h1 className= 'f1'>Robofriends</h1>\n\t\t\t\t<SearchBox searchChange = {this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<CardList robots = {filteredRobots}/>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \nimport { robots } from './robots';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}